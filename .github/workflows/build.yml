name: Build

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-18.04
    env:
      ANYKERNEL_PATH: /prebuilt/AnyKernel
      CLANG_PATH: /prebuilt/clang
      IMAGEDTB_PATH: out/arch/arm64/boot/Image.gz-dtb

    steps:

    - name: Setup additional environment variables
      id: setup_env
      run: |
        echo "##[set-output name=output_file;]$(echo Kernel-lavender-$(date +%F))"
        echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"

    - name: Checkout
      uses: actions/checkout@v2
      
    - name: Install build dependencies
      run: |
        sudo apt-get update
        sudo apt install -y ccache
        sudo bash -c "mkdir /{build,prebuilt} && chown $(whoami):$(whoami) /{build,prebuilt}"
        git clone --depth=1 --single-branch https://github.com/kdrag0n/proton-clang $CLANG_PATH
        git clone --depth=1 https://github.com/sfierxyz/AnyKernel3 $ANYKERNEL_PATH
    
    - name: Restore cache
      uses: pat-s/always-upload-cache@v2.1.3
      with:
        path: |
          ~/.ccache
        key: ${{ runner.os }}-ccache-${{ steps.setup_env.outputs.branch }}
        restore-keys: |
          ${{ runner.os }}-ccache-

    - name: Build
      run: |
        export PATH="$CLANG_PATH/bin:$PATH"
        export LD_LIBRARY_PATH="$CLANG_PATH/lib64:$LD_LIBRARY_PATH"
        make O=out ARCH=arm64 clean
        make O=out ARCH=arm64 lavender_defconfig
        make -j$(nproc --all) ARCH=arm64 O=out CC="ccache clang" \
        CROSS_COMPILE=aarch64-linux-gnu- \
        CROSS_COMPILE_ARM32=arm-linux-gnueabi- \
        AR=llvm-ar NM=llvm-nm \
        OBJCOPY=llvm-objcopy OBJDUMP=llvm-objdump\
        STRIP=llvm-strip

    - name: Archive
      run: |
        cd $ANYKERNEL_PATH
        mv $GITHUB_WORKSPACE/$IMAGEDTB_PATH .
        zip -r9 $GITHUB_WORKSPACE/${{ steps.setup_env.outputs.output_file }}.zip *

    - name: Upload Artifacts
      uses: actions/upload-artifact@v2
      with:
        path: ${{ steps.setup_env.outputs.output_file }}.zip
        name: ${{ steps.setup_env.outputs.output_file }}.zip
    
    - name: Upload binaries to release
      if: startsWith(github.ref, 'refs/tag/v')
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: ${{ steps.setup_env.outputs.output_file }}.zip
        tag: ${{ github.ref }}
